<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.kro.runleaf.repository.CommentRepository">
    <!-- Result Map -->
    <resultMap id="CommentResultMap" type="Comment">
        <id property="commentId" column="comment_id" />
        <result property="memberId" column="member_id" />
        <result property="parentId" column="parent_id" />
        <result property="writer" column="writer" />
        <result property="runningBoardId" column="running_board_id" />
        <result property="content" column="content" />
        <result property="createdTs" column="created_ts" />
        <result property="modifidedTs" column="modifided_ts" />
        <collection property="replies" ofType="com.example.domain.Comment"
            select="getRepliesByParentId" column="comment_id" />
    </resultMap>
    
    <!-- 댓글 + 대댓글 가져오기 -->
    <select id="selectCommentByRunningBoardId" resultType="Comment">
            SELECT 
                c.comment_id,
                c.member_id,
                c.parent_id,
                c.writer,
                c.running_board_id,
                c.content,
                c.created_ts,
                c.modifided_ts,
                (SELECT COUNT(*) FROM comment r WHERE r.parent_id = c.comment_id) AS replyCount
            FROM comment c
            WHERE c.running_board_id = #{runningBoardId}
              AND c.parent_id IS NULL
        	ORDER BY c.created_ts desc;
    </select>

	<!-- 임시로 만들어놓음 -->
	<select id="selectCommentByParentId" resultType="Comment"
			parameterType="int">
		SELECT	comment_id,
				member_id,
				parent_id,
				running_board_id,
				content,
				created_ts,
				modifided_ts,
				writer
		FROM	comment
		WHERE	parent_id = #{parentId}
	</select>

	<select id="selectCommentByCommentId" resultType="Comment"
			parameterType="int">
		SELECT 	comment_id,
                member_id,
                parent_id,
                writer,
                running_board_id,
                content,
                created_ts,
                modifided_ts
          FROM	comment
         WHERE	comment_id = #{commentId}
	</select>

	<insert id="insertComment" parameterType="Comment">
		INSERT INTO comment(
                member_id,
                parent_id,
                writer,
                running_board_id,
                content
			   )
		 VALUES (
		 	(SELECT member_id FROM member WHERE username = #{writer}),
		 	NULLIF(#{parentId}, 0),
		 	#{writer},
		 	#{runningBoardId},
		 	#{content}
		 )
	</insert>

	<update id="updateComment" parameterType="Comment">
		UPDATE 	comment
		   SET	writer = #{writer},
			 	content = #{content}
		 WHERE	comment_id = #{commentId}
	</update>

	<delete id="deleteCommentByCommentId" parameterType="int">
		DELETE	FROM comment
		WHERE	comment_id = #{commentId}
	</delete>

</mapper>


