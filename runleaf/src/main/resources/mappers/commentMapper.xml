<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.kro.runleaf.repository.CommentRepository">
    <!-- Result Map -->
    <resultMap id="CommentResultMap" type="com.example.domain.Comment">
        <id property="commentId" column="comment_id" />
        <result property="memberId" column="member_id" />
        <result property="parentId" column="parent_id" />
        <result property="writer" column="writer" />
        <result property="runningBoardId" column="running_board_id" />
        <result property="content" column="content" />
        <result property="createdDate" column="created_date" />
        <result property="modifidedDate" column="modifided_date" />
        <collection property="replies" ofType="com.example.domain.Comment"
            select="getRepliesByParentId" column="comment_id" />
    </resultMap>
    
    <!-- 댓글 + 대댓글 가져오기 -->
    <select id="getCommentsByRunningBoardId" resultMap="CommentResultMap">
        WITH RECURSIVE comment_hierarchy AS (
            SELECT 
                comment_id,
                member_id,
                parent_id,
                writer,
                running_board_id,
                content,
                created_date,
                modifided_date
            FROM comment
            WHERE running_board_id = #{runningBoardId} AND parent_id IS NULL
            
            UNION ALL
            
            SELECT 
                c.comment_id,
                c.member_id,
                c.parent_id,
                c.writer,
                c.running_board_id,
                c.content,
                c.created_date,
                c.modifided_date
            FROM comment c
            INNER JOIN comment_hierarchy ch ON c.parent_id = ch.comment_id
        )
        SELECT * 
        FROM comment_hierarchy
        ORDER BY parent_id, created_date;
    </select>

    <!-- 대댓글 가져오기 -->
    <select id="getRepliesByParentId" resultMap="CommentResultMap">
        SELECT * 
        FROM comment
        WHERE parent_id = #{parentId}
        ORDER BY created_date;
    </select>

	<!-- 임시로 만들어놓음 -->
	<select id="selectCommentByParentId" resultType="Comment"
			parameterType="int">
		SELECT	comment_id,
				member_id,
				parent_id,
				running_board_id,
				content,
				created_date,
				modifided_date,
				writer
		FROM	comment
		WHERE	parent_id = #{parentId}
	</select>

	<select id="selectCommentByCommentId" resultType="Comment"
			parameterType="int">
		SELECT 	comment_id,
                member_id,
                parent_id,
                writer,
                running_board_id,
                content,
                created_date,
                modifided_date
          FROM	comment
         WHERE	comment_id = #{commentId}
	</select>

	<insert id="insertComment" parameterType="Comment">
		INSERT INTO comment(
			    comment_id,
                member_id,
                parent_id,
                writer,
                running_board_id,
                content,
                created_date,
                modifided_date
			   )
		 VALUES (
		 	#{commentId},
		 	#{memberId},
		 	#{parentId},
		 	#{runningBoardId},
		 	#{writer},
		 	#{content},
		 	#{createdDate},
		 	#{modifidedDate}
		 )
	</insert>

	<update id="updateComment" parameterType="Comment">
		UPDATE 	comment
		   SET	writer = #{writer},
			 	content = #{content}
		 WHERE	comment_id = #{commentId}
	</update>

	<delete id="deleteCommentByCommentId" parameterType="int">
		DELETE	FROM comment
		WHERE	comment_id = #{commentId}
	</delete>

</mapper>


